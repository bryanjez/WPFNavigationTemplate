<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <!--  Colors BEGIN  -->

    <Color x:Key="SemiPrimary">#679FC8</Color>
    <Color x:Key="Primary">#1B6FAD</Color>
    <Color x:Key="Secondary">#19A849</Color>

    <Color x:Key="LightBlack">#2C2C2C</Color>
    <Color x:Key="LightGray">#EEEEEE</Color>
    <SolidColorBrush x:Key="BrushLightBlack" Color="{StaticResource LightBlack}" />
    <SolidColorBrush x:Key="BrushLightGray" Color="{StaticResource LightGray}" />

    <SolidColorBrush x:Key="ColorPrimary" Color="{StaticResource Primary}" />
    <SolidColorBrush x:Key="ColorOnPrimary" Color="White" />
    <SolidColorBrush x:Key="ColorSecondary" Color="{StaticResource Secondary}" />


    <Color x:Key="Red">#F60000</Color>
    <Color x:Key="LightRed">#FF6B6B</Color>

    <SolidColorBrush x:Key="IdleRed" Color="{StaticResource Red}" />
    <SolidColorBrush x:Key="IdleLightRed" Color="{StaticResource LightRed}" />
    <SolidColorBrush x:Key="ActiveRed" Color="#ee9290" />

    <SolidColorBrush x:Key="IdleGreen" Color="#26A69A" />
    <SolidColorBrush x:Key="OnIdleGreen" Color="White" />

    <Color x:Key="Blue">#0492C2</Color>
    <Color x:Key="LightBlue">#6FC2F8</Color>

    <SolidColorBrush x:Key="IdleBlue" Color="{StaticResource Blue}" />
    <SolidColorBrush x:Key="IdleLightBlue" Color="{StaticResource LightBlue}" />
    <SolidColorBrush x:Key="ChartBacground" Color="white" />

    <Color x:Key="ChartRed">#EF5350</Color>
    <Color x:Key="ChartGreen">#26A69A</Color>

    <SolidColorBrush x:Key="BrushChartRed" Color="{StaticResource ChartRed}" />
    <SolidColorBrush x:Key="BrushChartGreend" Color="{StaticResource ChartGreen}" />

    <!--  Colors END  -->

    <!--  Button Start  -->

    <Style TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ColorOnPrimary}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Border"
                        Background="{DynamicResource ColorPrimary}"
                        BorderThickness="0"
                        CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ColorOnPrimary}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ColorOnPrimary}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Border"
                        Background="{DynamicResource ColorSecondary}"
                        BorderThickness="0"
                        CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ColorOnPrimary}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="OutlineButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ColorPrimary}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Border"
                        Background="Transparent"
                        BorderBrush="{DynamicResource ColorPrimary}"
                        BorderThickness="1.5"
                        CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ColorOnPrimary}" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="MenuButton" TargetType="Button">
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource BrushLightBlack}" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Border"
                        Background="{StaticResource BrushLightGray}"
                        BorderThickness="0"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ColorOnPrimary}" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="BigButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource BrushLightBlack}" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Border"
                        Background="{StaticResource BrushLightGray}"
                        BorderThickness="0"
                        CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ColorOnPrimary}" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="TextButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ColorOnPrimary}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ColorOnPrimary}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ControlButton" TargetType="Button">

        <Setter Property="Foreground" Value="{StaticResource BrushLightBlack}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--  Button END  -->

    <!--  Label START  -->

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource BrushLightBlack}" />
    </Style>

    <!--  Label END  -->

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        Name="Shadow"
                        Background="{StaticResource ColorPrimary}"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        CornerRadius="3"
                        Opacity="0.8">
                        <Border
                            Name="Border"
                            Background="{StaticResource ColorOnPrimary}"
                            BorderBrush="{StaticResource ColorPrimary}"
                            BorderThickness="1"
                            CornerRadius="3">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="8,9.5,8,0" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Shadow" Property="BorderBrush" Value="{StaticResource ColorPrimary}" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Shadow" Property="BorderBrush" Value="{StaticResource ColorPrimary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SideBarMenu"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="RadioButton">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid
                            Width="auto"
                            Height="35"
                            Margin="10,5,10,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">

                            <Border
                                Name="Border"
                                Background="{StaticResource ColorPrimary}"
                                CornerRadius="5"
                                Visibility="Hidden" />

                            <Grid Margin="9,0" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="18" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <iconPacks:PackIconBoxIcons
                                    Name="Icon"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource BrushLightBlack}">
                                    <iconPacks:PackIconBoxIcons.Resources>
                                        <Style TargetType="iconPacks:PackIconBoxIcons">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=Label, Path=Content}" Value="Dashboard">
                                                    <Setter Property="Kind" Value="SolidDashboard" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=Label, Path=Content}" Value="Settings">
                                                    <Setter Property="Kind" Value="SolidCog" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </iconPacks:PackIconBoxIcons.Resources>
                                </iconPacks:PackIconBoxIcons>

                                <Label
                                    Name="Label"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Property=Name}"
                                    FontSize="12"
                                    FontWeight="Bold"
                                    Foreground="{DynamicResource BrushLightBlack}" />
                            </Grid>

                            <ContentPresenter Margin="8,0" />

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Label" Property="Foreground" Value="White" />
                                <Setter TargetName="Icon" Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Label" Property="Foreground" Value="White" />
                                <Setter TargetName="Icon" Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Content" Value="" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Border
                            Width="18"
                            Height="18"
                            BorderBrush="{StaticResource ColorPrimary}"
                            BorderThickness="2"
                            CornerRadius="2">
                            <Path
                                Name="Check"
                                Width="11"
                                Height="11"
                                Data="M 2,4 C 2,4 3,5 5,13 C 5,13 5,3 12,0"
                                Stroke="{StaticResource ColorPrimary}"
                                StrokeThickness="2" />
                        </Border>

                        <ContentPresenter
                            x:Name="content"
                            Grid.Column="1"
                            Margin="5,0,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Check" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="NotifyOff" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Content" Value="" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ContentPresenter
                        x:Name="content"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center" />

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.8" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ScrollBar BEGIN  -->

    <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <SolidColorBrush x:Key="NormalBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#c2c3c9" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />

    <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="White" />
                <GradientStop Offset="0.6" Color="White" />
                <GradientStop Offset="1.2" Color="#DDDDDD" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FFF" />
                <GradientStop Offset="1.0" Color="#CCC" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#BBB" />
                <GradientStop Offset="0.1" Color="#EEE" />
                <GradientStop Offset="0.9" Color="#EEE" />
                <GradientStop Offset="1.0" Color="#FFF" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        Name="Border"
                        Margin="1"
                        Background="{StaticResource NormalBrush}"
                        BorderBrush="{StaticResource NormalBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                            Fill="{StaticResource GlyphBrush}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Width="8"
                        Margin="8,0,-2,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="4" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="0" />
            </Grid.RowDefinitions>
            <Border
                Grid.RowSpan="3"
                Background="Transparent"
                CornerRadius="2" />
            <RepeatButton
                Grid.Row="0"
                Height="18"
                Command="ScrollBar.LineUpCommand"
                Content="M 0 4 L 8 4 L 4 0 Z"
                Style="{StaticResource ScrollBarLineButton}" />
            <Track
                Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Margin="1,0,1,0"
                        Background="{StaticResource HorizontalNormalBrush}"
                        BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                        Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Row="3"
                Height="18"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z"
                Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.ColumnSpan="3"
                Background="#F0F0F0"
                CornerRadius="2" />
            <RepeatButton
                Grid.Column="0"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z"
                Style="{StaticResource ScrollBarLineButton}" />
            <Track
                Name="PART_Track"
                Grid.Column="1"
                IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Margin="0,1,0,1"
                        Background="{StaticResource NormalBrush}"
                        BorderBrush="{StaticResource NormalBorderBrush}"
                        Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Column="3"
                Width="18"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z"
                Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="1" />
                        <ScrollBar
                            Name="PART_VerticalScrollBar"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{TemplateBinding VerticalOffset}" />
                        <ScrollBar
                            Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="1"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{TemplateBinding HorizontalOffset}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollBar END  -->

</ResourceDictionary>